<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- Servlet -->
		<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" id="handlerMapping">
        <property name="alwaysUseFullPath" value="true"></property></bean>
	
	<mvc:annotation-driven>
	<!-- Enables the Spring MVC @Controller programming model -->
	 <mvc:message-converters>
        <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
        <bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter"/>
        <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
    </mvc:message-converters>
	
	</mvc:annotation-driven>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<context:annotation-config/>

	<context:component-scan base-package="net.codejava.spring" />
	
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
     <!--     <property name="url" value="jdbc:mysql://localhost:3306/test"/> -->
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/usersdb"/> 
        <property name="username" value="root"/>
        <property name="password" value="pwd"/>
    </bean>	
    
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" scope="singleton">
        <property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
		<property name="annotatedClasses">
            <list>
                <value>net.codejava.spring.model.Category</value>
            </list>
        </property>
    </bean>
     
    
	<bean id="userDao" class="net.codejava.spring.dao.UserDAOImpl">
	    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean> 
	
	<bean id="userService" class="net.codejava.spring.service.UserServiceImpl">
	</bean> 
	
		<bean id="itemDao" class="net.codejava.spring.dao.ItemDAOImpl">
	    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean> 
	
	<bean id="itemService" class="net.codejava.spring.service.ItemServiceImpl">
	</bean> 
	
			<bean id="categoryDao" class="net.codejava.spring.dao.CategoryDAOImpl">
	    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean> 
	
	<bean id="catService" class="net.codejava.spring.service.CatServiceImpl">
	</bean> 
	
		<bean id="supService" class="net.codejava.spring.service.SupServiceImpl">
	</bean> 

			<bean id="supplierDao" class="net.codejava.spring.dao.SupplierDAOImpl">
	    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean> 
	

	   	
	<bean id="stockDoa" class="net.codejava.spring.dao.StockDAOImpl">
		    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean> 
	
	
	 	<bean id="orderDoa" class="net.codejava.spring.dao.OrderDAOImpl">
		    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean> 
	
	<bean id="salesOrderService" class="net.codejava.spring.service.SalesOrderServiceImpl">
	</bean>
	
		 	<bean id="salesorderDoa" class="net.codejava.spring.dao.SalesOrderDAOImpl">
		    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean> 
	
		<bean id="purchaseOrderService" class="net.codejava.spring.service.PurchaseOrderServiceImpl">
	</bean>
	
		 	<bean id="purchaseorderDoa" class="net.codejava.spring.dao.PurchaseOrderDAOImpl">
		    <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
	</bean>
	
</beans>
